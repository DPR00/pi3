#!/usr/bin/env python

from __future__ import print_function
import csv
import rospy
from std_msgs.msg import String

'''
Melodia1 = ode to joy
Melodia2 = feliz cumple
Melodia3 = estrellita
Melodia4 = megalovania
'''

#----------------------------------Funciones ---------------------------------
def csvANotasTiempos(archivo):
    notasTiempo=[]
    negras = [61, 63, 66, 68, 70, 73, 75, 78, 80, 82, 85, 87, 90, 92, 94]
    with open(archivo) as f:
        reader = csv.reader(f)
        for row in reader:
            notasTiempo.append([float(row[0]), float(row[1]), float(row[2])])
            if float(row[0]) in negras:
                notasTiempo[-1] = [0.0, float(row[1]), float(row[2])]
    return notasTiempo

def ajustarTiempos(arrayNotasTiempo):
    for i in range(1, len(arrayNotasTiempo)):
        if arrayNotasTiempo[i][1] == arrayNotasTiempo[i - 1][1]:
            if arrayNotasTiempo[i][2] != arrayNotasTiempo[i - 1][2]:
                arrayNotasTiempo[i - 1][2] = arrayNotasTiempo[i][2]
        else:
            if arrayNotasTiempo[i][1] < arrayNotasTiempo[i - 1][2]:
                if arrayNotasTiempo[i - 1][2] - arrayNotasTiempo[i][1] < 0.1:
                    arrayNotasTiempo[i - 1][2] = arrayNotasTiempo[i][1]
                else:
                    arrayNotasTiempo[i][1] = arrayNotasTiempo[i - 1][2]
            elif arrayNotasTiempo[i][1] > arrayNotasTiempo[i - 1][2]:
                if arrayNotasTiempo[i][1] - arrayNotasTiempo[i - 1][2] < 0.1:
                    arrayNotasTiempo[i - 1][2] = arrayNotasTiempo[i][1]

def secuenciaNotas(arrayNotasTiempo):
    t = 0
    Notas = []
    Tiempo = 0
    secuencia = []
    for i in range(0, len(arrayNotasTiempo)):
        if arrayNotasTiempo[i][1] == t:
            Notas.append(arrayNotasTiempo[i][0])
            Tiempo = arrayNotasTiempo[i][2] - arrayNotasTiempo[i][1]
        elif arrayNotasTiempo[i][1] != t:
            t = arrayNotasTiempo[i][1]
            Notas = []
            Notas.append(arrayNotasTiempo[i][0])
            Tiempo = arrayNotasTiempo[i][2] - arrayNotasTiempo[i][1]
        if len(Notas) > 1:
            secuencia[-1] = [sorted(Notas), Tiempo]
        else:
            secuencia.append([sorted(Notas), Tiempo])
    return secuencia

def secuenciaTeclas(secuenciaNotasTiempo):
    numteclas=21
    secuenciaTeclas = []
    teclado = [0]*numteclas
    teclas = {60: 0, 62: 1, 64: 2, 65: 3, 67: 4, 69: 5, 71: 6, 72: 7, 74: 8, 76: 9, 77: 10, 79: 11, 81: 12, 83: 13, 84: 14, 86: 15, 88: 16, 89: 17, 91: 18, 93: 19, 95: 20}

    for i in range(0, len(secuenciaNotasTiempo)):
        for j in range(0, len(secuenciaNotasTiempo[i][0])):
            if int(secuenciaNotasTiempo[i][0][j]) != 0:
                posicion = teclas[int(secuenciaNotasTiempo[i][0][j])]
                teclado[posicion] = 1
        secuenciaTeclas.append([teclado, secuenciaNotasTiempo[i][1]])
        teclado = [0]*numteclas
    return secuenciaTeclas

def posicionMano(secuenciaTeclasTiempo):
    posicion = 0
    comparador = -1
    movMano = []
    for i in secuenciaTeclasTiempo:
        for j in range(0, len(i[0])):
            if i[0][j] == 1:
                comparador = j
        if comparador != -1:
            if (comparador > posicion + 4):
                posicion = comparador - 4
            elif (comparador < posicion):
                posicion = comparador
        servos = i[0][posicion:posicion+5]
        movMano.append([posicion, servos[0],servos[1], servos[2], servos[3], servos[4], round(i[1],3)])
        comparador = -1
    return movMano

def ventana():
    st="VENTANA"
    msg.data=st
    for i in range(3):
        print(st)
        pub.publish(st)
        rate.sleep()

def valor_base(sec):

    tiempos=[]
    for i in range(len(sec)):
        tiempos.append(sec[i][6])

    val_base=min(tiempos)
    
    for i in range(len(sec)):
        sec[i].append(val_base)

    return sec

#--------------------------------------------------------------------------------

rospy.init_node("Datos_notas")
pub= rospy.Publisher('Notas_central',String, queue_size=10)
rate= rospy.Rate(1)

## Crear nuestro propio mensaje
msg= String()
ventana()

try:
    i=0
    while not rospy.is_shutdown():
        
        NT = csvANotasTiempos('Melodia2.csv')
        ajustarTiempos(NT)
        teclas = secuenciaNotas(NT)
        secuencia = secuenciaTeclas(teclas)
        movmano = posicionMano(secuencia)
        movMano =valor_base(movmano)

        if i<len(movMano)-1:
            s_pos=str(movMano[i][0])
            s_servos=str(movMano[i][1])+","+str(movMano[i][2])+","+str(movMano[i][3])+","+str(movMano[i][4])+","+str(movMano[i][5])
            s_time=str(movMano[i][6])+","+str(movMano[i][7])
            salida=s_pos+","+s_servos+","+s_time
            print(salida)
            i=i+1
            msg.data=salida
            pub.publish(salida)

        else:
            i=0

        rate.sleep()

except rospy.ROSInterruptException:
	pass